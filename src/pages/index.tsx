import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import LoginButton from "../components/LoginButton";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { PopulatedPost } from "../types/posts";
import { useSession } from "next-auth/react";

const Home: NextPage = () => {
  const { data: session } = useSession();
  const [posts, setPosts] = useState<PopulatedPost[]>([]);

  const fetchPosts = async () => {
    const res = await fetch("/api/posts/find");
    const data = await res.json();
    console.log(data);
    setPosts(data);
  };
  useEffect(() => {
    fetchPosts();
  }, []);
  return (
    <>
      <Head>
        <title>Posts</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
        <meta name="description" content="Write posts, let others read" />
        <meta
          name="robots"
          content="nofollow, noindex, max-snippet:-1, max-video-preview:-1, max-image-preview:large"
        />

        <meta property="og:locale" content="en_US" />
        <meta property="og:type" content="website" />
        <meta property="og:title" content="Qwestive: We read your thoughts" />
        <meta
          property="og:description"
          content="Come and read, come and write"
        />
        <meta property="og:url" content="https://www.qwestive.io/" />
        <meta property="og:site_name" content="qwestive" />
        <meta
          property="og:image"
          content="https://www.qwestive.io/illustration.svg"
        />
        <meta property="og:image:width" content="1200" />
        <meta property="og:image:height" content="630" />
        <meta property="og:image:alt" content="Qwestive" />
        <meta property="og:image:type" content="image/svg" />

        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:title" content="Qwestive: Your posts, our reads" />
        <meta name="twitter:description" content="Lets write together" />
        <meta property="twitter:card" content="summary_large_image" />
        <meta
          property="twitter:image"
          content="https://qwestive.io/illustration.svg"
        />
        <meta property="twitter:image:alt" content="Qwestive posts" />
      </Head>

      <main className="container mx-auto flex flex-col items-center justify-center min-h-screen p-4">
        <div className="fixed top-0 right-0">
          <LoginButton />
        </div>
        <h1 className="text-3xl md:text-[3rem] leading-normal font-extrabold text-gray-700">
          All Posts
        </h1>
        <div className="grid gap-3 pt-3 mt-3 text-center md:grid-cols-3 lg:w-3/4">
          {/* <LoginButton/> */}
          {session && <CreatePostCard />}
          {posts.map((post) => (
            <PostCard key={post.id} {...post} />
          ))}
        </div>
      </main>
    </>
  );
};

export default Home;

const PostCard = ({ title, id, author, content }: PopulatedPost) => {
  const router = useRouter();
  return (
    <section
      onClick={() => router.push(`/post/${id}`)}
      className="flex flex-col justify-center p-6 duration-500 border-2 border-gray-500 rounded shadow-xl motion-safe:hover:scale-105"
    >
      <h2 className="text-lg text-gray-700">{title}</h2>
      <p className="text-sm text-gray-600">
        {content.substring(0, 200) + (content.length > 200 ? "..." : "")}
      </p>
      <h4 className="text-md text-violet-500">{author.name}</h4>
    </section>
  );
};

const CreatePostCard = () => {
  const router = useRouter();
  return (
    <section
      onClick={() => router.push("/new-post")}
      className="flex flex-col cursor-pointer justify-center p-6 duration-500 border-2 border-gray-500 rounded shadow-xl motion-safe:hover:scale-105"
    >
      <Image
        src={"/plus.svg"}
        width={"28"}
        height={"28"}
        alt="Add Icon"
      ></Image>
      <p className="text-sm text-gray-600">Create new post</p>
    </section>
  );
};
